# Falco rules for nginx plugin
# Detects security events in nginx logs
#
# Updated for SDK-based plugin (2025-08-04)
# All rules now include 'source: nginx' as required by SDK plugins

- required_plugin_versions:
  - name: nginx
    version: 0.1.0

# SQL Injection attempts
- rule: Nginx SQL Injection Attempt
  desc: Detects potential SQL injection attempts in nginx logs
  source: nginx
  condition: > 
    (nginx.path contains " union " or
     nginx.path contains "union select" or
     nginx.path contains "' or " or
     nginx.path contains "' and " or
     nginx.path contains "insert into" or
     nginx.path contains "delete from" or
     nginx.path contains "drop table" or
     nginx.path contains "--" or
     nginx.path contains "/*" or
     nginx.path contains "*/")
  output: >
    Potential SQL injection attempt detected 
    (client=%nginx.remote_addr method=%nginx.method path=%nginx.path 
    user_agent=%nginx.user_agent status=%nginx.status)
  priority: WARNING
  tags: [web, nginx, sql_injection]

# XSS attempts
- rule: Nginx XSS Attempt
  desc: Detects potential XSS attempts in nginx logs
  source: nginx
  condition: >
    (nginx.path contains "<script" or
     nginx.path contains "javascript:" or
     nginx.path contains "onerror=" or
     nginx.path contains "<iframe")
  output: >
    Potential XSS attempt detected
    (client=%nginx.remote_addr method=%nginx.method path=%nginx.path
    user_agent=%nginx.user_agent status=%nginx.status)
  priority: WARNING
  tags: [web, nginx, xss]

# Path traversal attempts
- rule: Nginx Path Traversal
  desc: Detects path traversal attempts in nginx logs
  source: nginx
  condition: >
    (nginx.path contains "../" or
     nginx.path contains "..%2f" or
     nginx.path contains "..%5c")
  output: >
    Path traversal attempt detected
    (client=%nginx.remote_addr method=%nginx.method path=%nginx.path
    user_agent=%nginx.user_agent status=%nginx.status)
  priority: WARNING
  tags: [web, nginx, path_traversal]

# Suspicious HTTP methods
- rule: Nginx Suspicious Method
  desc: Detects suspicious HTTP methods
  source: nginx
  condition: >
    nginx.method in (CONNECT, TRACE, TRACK, OPTIONS, PROPFIND)
  output: >
    Suspicious HTTP method detected
    (client=%nginx.remote_addr method=%nginx.method path=%nginx.path
    user_agent=%nginx.user_agent status=%nginx.status)
  priority: NOTICE
  tags: [web, nginx, suspicious_method]

# High error rate from single IP
- rule: Nginx High Error Rate
  desc: Detects high error rate from a single IP
  source: nginx
  condition: >
    nginx.status >= 400 and
    nginx.status < 500
  output: >
    Client error detected
    (client=%nginx.remote_addr method=%nginx.method path=%nginx.path
    status=%nginx.status user_agent=%nginx.user_agent)
  priority: NOTICE
  tags: [web, nginx, client_error]

# Potential scanner detection
- rule: Nginx Scanner Detection
  desc: Detects potential vulnerability scanners
  source: nginx
  condition: >
    (nginx.user_agent contains "sqlmap" or
     nginx.user_agent contains "nikto" or
     nginx.user_agent contains "nmap" or
     nginx.user_agent contains "masscan" or
     nginx.user_agent contains "acunetix")
  output: >
    Potential vulnerability scanner detected
    (client=%nginx.remote_addr scanner=%nginx.user_agent
    path=%nginx.path status=%nginx.status)
  priority: WARNING
  tags: [web, nginx, scanner]

# Large response size
- rule: Nginx Large Response
  desc: Detects unusually large responses
  source: nginx
  condition: >
    nginx.bytes_sent > 10485760
  output: >
    Large response detected
    (client=%nginx.remote_addr method=%nginx.method path=%nginx.path
    size=%nginx.bytes_sent status=%nginx.status)
  priority: NOTICE
  tags: [web, nginx, large_response]

# Command injection attempts
- rule: Nginx Command Injection
  desc: Detects potential command injection attempts
  source: nginx
  condition: >
    (nginx.path contains "; " or
     nginx.path contains " | " or
     nginx.path contains " && " or
     nginx.path contains "$(" or
     nginx.path contains "`" or
     nginx.path contains "; ls" or
     nginx.path contains "; cat" or
     nginx.path contains "| ls" or
     nginx.path contains "| cat")
  output: >
    Potential command injection attempt
    (client=%nginx.remote_addr method=%nginx.method path=%nginx.path
    user_agent=%nginx.user_agent status=%nginx.status)
  priority: WARNING
  tags: [web, nginx, command_injection]

# Access denied patterns
- rule: Nginx Access Denied
  desc: Monitors access denied responses
  source: nginx
  condition: >
    nginx.status = 403
  output: >
    Access denied
    (client=%nginx.remote_addr method=%nginx.method path=%nginx.path
    user_agent=%nginx.user_agent)
  priority: NOTICE
  tags: [web, nginx, access_denied]

# 404 scanning patterns
- rule: Nginx 404 Scan
  desc: Detects potential scanning via 404 errors
  source: nginx
  condition: >
    nginx.status = 404
  output: >
    Resource not found - potential scan
    (client=%nginx.remote_addr method=%nginx.method path=%nginx.path
    user_agent=%nginx.user_agent)
  priority: INFO
  tags: [web, nginx, not_found]
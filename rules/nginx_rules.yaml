# Nginx Security Rules for Falco
# Version: 0.3.0
# Compatible with: Falco Plugin SDK for Go

# SQL Injection Detection
- rule: SQL Injection Attempt
  desc: Detects potential SQL injection attacks in nginx logs
  condition: >
    (nginx.path contains "' OR" or nginx.query_string contains "' OR") or
    (nginx.path contains "' AND" or nginx.query_string contains "' AND") or
    (nginx.path contains "UNION SELECT" or nginx.query_string contains "UNION SELECT") or
    (nginx.path contains "; DROP" or nginx.query_string contains "; DROP") or
    (nginx.path contains "/*" or nginx.query_string contains "/*") or
    (nginx.path contains "*/" or nginx.query_string contains "*/")
  output: "SQL injection attempt: ip=%nginx.remote_addr% method=%nginx.method% path=%nginx.path% query=%nginx.query_string% status=%nginx.status%"
  priority: CRITICAL
  source: nginx
  tags: [attack, sql_injection, web]

# XSS Attack Detection
- rule: XSS Attack Attempt
  desc: Detects potential Cross-Site Scripting attacks
  condition: >
    (nginx.path contains "<script" or nginx.query_string contains "<script") or
    (nginx.path contains "javascript:" or nginx.query_string contains "javascript:") or
    (nginx.path contains "onerror=" or nginx.query_string contains "onerror=") or
    (nginx.path contains "onload=" or nginx.query_string contains "onload=") or
    (nginx.path contains "<iframe" or nginx.query_string contains "<iframe") or
    (nginx.path contains "<object" or nginx.query_string contains "<object")
  output: "XSS attack attempt: ip=%nginx.remote_addr% method=%nginx.method% path=%nginx.path% query=%nginx.query_string% status=%nginx.status%"
  priority: WARNING
  source: nginx
  tags: [attack, xss, web]

# Path Traversal Detection
- rule: Path Traversal Attempt
  desc: Detects attempts to access files outside webroot
  condition: >
    (nginx.path contains "../" or nginx.query_string contains "../") or
    (nginx.path contains "..\\" or nginx.query_string contains "..\\") or
    (nginx.path contains "/etc/" or nginx.query_string contains "/etc/") or
    (nginx.path contains "/proc/" or nginx.query_string contains "/proc/") or
    (nginx.path contains "C:\\" or nginx.query_string contains "C:\\")
  output: "Path traversal attempt: ip=%nginx.remote_addr% method=%nginx.method% path=%nginx.path% query=%nginx.query_string% status=%nginx.status%"
  priority: WARNING
  source: nginx
  tags: [attack, path_traversal, web]

# Command Injection Detection
- rule: Command Injection Attempt
  desc: Detects potential command injection attacks
  condition: >
    (nginx.path contains ";ls" or nginx.query_string contains ";ls") or
    (nginx.path contains ";cat" or nginx.query_string contains ";cat") or
    (nginx.path contains "|ls" or nginx.query_string contains "|ls") or
    (nginx.path contains "|cat" or nginx.query_string contains "|cat") or
    (nginx.path contains "&&" or nginx.query_string contains "&&") or
    (nginx.path contains "||" or nginx.query_string contains "||") or
    (nginx.path contains "`" or nginx.query_string contains "`") or
    (nginx.path contains "$(" or nginx.query_string contains "$(")
  output: "Command injection attempt: ip=%nginx.remote_addr% method=%nginx.method% path=%nginx.path% query=%nginx.query_string% status=%nginx.status%"
  priority: CRITICAL
  source: nginx
  tags: [attack, command_injection, web]

# Suspicious User Agent
- rule: Suspicious User Agent
  desc: Detects known malicious user agents
  condition: >
    nginx.user_agent contains "sqlmap" or
    nginx.user_agent contains "nikto" or
    nginx.user_agent contains "nmap" or
    nginx.user_agent contains "masscan" or
    nginx.user_agent contains "scanner"
  output: "Suspicious user agent: ip=%nginx.remote_addr% user_agent=%nginx.user_agent% path=%nginx.path% query=%nginx.query_string%"
  priority: NOTICE
  source: nginx
  tags: [reconnaissance, scanner, web]

# High Error Rate (simplified for now)
- rule: HTTP Client Error
  desc: Detects HTTP 4xx client errors
  condition: >
    nginx.status >= 400 and nginx.status < 500
  output: "HTTP client error: ip=%nginx.remote_addr% status=%nginx.status% path=%nginx.path% method=%nginx.method%"
  priority: INFORMATIONAL
  source: nginx
  tags: [error, web]

# Server Error Detection
- rule: HTTP Server Error
  desc: Detects HTTP 5xx server errors
  condition: >
    nginx.status >= 500
  output: "HTTP server error: ip=%nginx.remote_addr% status=%nginx.status% path=%nginx.path% method=%nginx.method%"
  priority: NOTICE
  source: nginx
  tags: [error, server, web]

# Brute Force Detection (simplified)
- rule: Multiple Failed Login Attempts
  desc: Detects multiple failed authentication attempts
  condition: >
    nginx.path contains "/login" and
    (nginx.status = 401 or nginx.status = 403)
  output: "Failed login attempt: ip=%nginx.remote_addr% path=%nginx.path% status=%nginx.status%"
  priority: NOTICE
  source: nginx
  tags: [brute_force, authentication, web]

# Large Response Detection (note: this is response size, not request body)
- rule: Large Response Body
  desc: Detects unusually large response bodies
  condition: >
    nginx.bytes_sent > 10485760
  output: "Large response body: ip=%nginx.remote_addr% size=%nginx.bytes_sent% path=%nginx.path% method=%nginx.method%"
  priority: INFORMATIONAL
  source: nginx
  tags: [anomaly, web]

# Suspicious File Access
- rule: Sensitive File Access Attempt
  desc: Detects attempts to access sensitive files
  condition: >
    nginx.path contains ".git" or
    nginx.path contains ".env" or
    nginx.path contains "wp-config" or
    nginx.path contains ".htaccess" or
    nginx.path contains ".htpasswd"
  output: "Sensitive file access: ip=%nginx.remote_addr% path=%nginx.path% status=%nginx.status%"
  priority: WARNING
  source: nginx
  tags: [attack, information_disclosure, web]
# Nginx Security Rules for Falco
# Version: 0.4.0
# Compatible with: Falco Plugin SDK for Go
#
# This ruleset uses lists and macros for better maintainability and reduced false positives

# =========================
# Reusable lists
# Note: Some lists below are expanded inline in macros due to Falco syntax limitations
# They are kept for documentation and future reference
# =========================
- list: nginx_methods_readonly
  items: [GET, HEAD, OPTIONS]

- list: nginx_methods_with_body
  items: [POST, PUT, PATCH]

- list: nginx_login_paths
  items: [/login, /signin, /auth, /wp-login.php, /session, /api/auth]

- list: nginx_admin_paths
  items: [/admin, /wp-admin, /manager, /phpmyadmin]

- list: nginx_api_paths
  items: [/api/, /v1/, /v2/, /rest/, /graphql]

- list: nginx_static_exts
  items: [.css, .js, .png, .jpg, .jpeg, .svg, .ico, .gif, .woff, .woff2, .map]

- list: nginx_sqli_tokens_words
  items:
    [ "select", "union", "sleep(", "update", "insert", "drop", " or ",
      "' or '1'='1", "benchmark(", "information_schema", "load_file(" ]

- list: nginx_sqli_tokens_rawchars
  items: ["'", "\"", ";", "--", "#", "%27", "%22", "%3B", "%2D%2D", "%23"]

- list: nginx_cmdinj_tokens_words
  items:
    [ "sh -c", "bash -c", "cat /etc/passwd", "wget ", "curl ",
      "nc ", "powershell", "cmd /c", "||", "|", "&", "$(", "`" ]

- list: nginx_traversal_tokens
  items: ["../", "..%2f", "%2e%2e%2f", "/etc/passwd", "/.ssh/", "/windows/system32"]

- list: nginx_xss_tokens
  items:
    [ "<script", "%3cscript", "javascript:", "onerror=", "onload=", "document.cookie" ]

- list: nginx_bad_user_agents
  items: ["sqlmap", "nikto", "nmap", "curl", "wget", "libwww", "python-requests"]

# =========================
# Reusable macros
# =========================
# Toggle: Set to true to enable debug rules (change condition to nginx.path != "" to enable)
- macro: nginx_debug_enabled
  condition: (nginx.path = "NEVER_MATCH_THIS_DEBUG_TOGGLE")

# Static file delivery is noisy, so exclude it
- macro: nginx_is_static
  condition: >
    (nginx.path endswith ".css" or nginx.path endswith ".js" or
     nginx.path endswith ".png" or nginx.path endswith ".jpg" or
     nginx.path endswith ".jpeg" or nginx.path endswith ".svg" or
     nginx.path endswith ".ico" or nginx.path endswith ".gif" or
     nginx.path endswith ".woff" or nginx.path endswith ".woff2" or
     nginx.path endswith ".map")

# Common auth/admin/api paths
- macro: nginx_is_login_path
  condition: >
    (nginx.path startswith "/login" or nginx.path startswith "/signin" or
     nginx.path startswith "/auth" or nginx.path startswith "/wp-login.php" or
     nginx.path startswith "/session" or nginx.path startswith "/api/auth")

- macro: nginx_is_admin_path
  condition: >
    (nginx.path startswith "/admin" or nginx.path startswith "/wp-admin" or
     nginx.path startswith "/manager" or nginx.path startswith "/phpmyadmin")

- macro: nginx_is_api_path
  condition: >
    (nginx.path startswith "/api/" or nginx.path startswith "/v1/" or
     nginx.path startswith "/v2/" or nginx.path startswith "/rest/" or
     nginx.path startswith "/graphql")

# Method types
- macro: nginx_is_readonly
  condition: (nginx.method in (nginx_methods_readonly))

- macro: nginx_has_body_method
  condition: (nginx.method in (nginx_methods_with_body))

# Attack indicators with both character types and words
- macro: nginx_has_sqli_words
  condition: >
    (nginx.query_string icontains "select" or nginx.query_string icontains "union" or
     nginx.query_string icontains "sleep(" or nginx.query_string icontains "update" or
     nginx.query_string icontains "insert" or nginx.query_string icontains "drop" or
     nginx.query_string contains " or " or nginx.query_string contains "%20or%20" or
     nginx.query_string contains "' or '1'='1" or nginx.query_string contains "%27%20OR%20%271%27%3D%271" or
     nginx.query_string icontains "benchmark(" or nginx.query_string icontains "information_schema" or
     nginx.query_string icontains "load_file(")

- macro: nginx_has_sqli_rawchars
  condition: >
    (nginx.raw contains "'" or nginx.raw contains "\"" or nginx.raw contains ";" or
     nginx.raw contains "--" or nginx.raw contains "#" or nginx.raw contains "%27" or
     nginx.raw contains "%22" or nginx.raw contains "%3B" or nginx.raw contains "%2D%2D" or
     nginx.raw contains "%23")

- macro: nginx_has_cmdinj_words
  condition: >
    (nginx.raw contains "sh -c" or nginx.raw contains "bash -c" or
     nginx.raw contains "wget " or nginx.raw contains "curl " or nginx.raw contains "nc " or
     nginx.raw contains "powershell" or nginx.raw contains "cmd /c" or nginx.raw contains "||" or
     nginx.raw contains "|" or nginx.raw contains "&" or nginx.raw contains "$(" or nginx.raw contains "`" or
     nginx.query_string contains ";cat" or nginx.query_string contains "%3Bcat" or
     nginx.query_string contains ";ls" or nginx.query_string contains "%3Bls" or
     nginx.query_string contains ";id" or nginx.query_string contains "%3Bid")

- macro: nginx_has_traversal
  condition: >
    (nginx.path contains "../" or nginx.path contains "..%2f" or nginx.path contains "%2e%2e%2f" or
     nginx.path contains "/etc/passwd" or nginx.path contains "/.ssh/" or nginx.path contains "/windows/system32" or
     nginx.query_string contains "../" or nginx.query_string contains "..%2f" or nginx.query_string contains "%2e%2e%2f" or
     nginx.query_string contains "/etc/passwd" or nginx.query_string contains "/.ssh/" or nginx.query_string contains "/windows/system32")

- macro: nginx_has_xss
  condition: >
    (nginx.path contains "<script" or nginx.path contains "%3Cscript" or nginx.path contains "%3cscript" or
     nginx.path contains "%3Cscript%3E" or nginx.path contains "%3cscript%3e" or
     nginx.path contains "javascript:" or nginx.path contains "onerror=" or nginx.path contains "onload=" or
     nginx.path contains "document.cookie" or
     nginx.query_string contains "<script" or nginx.query_string contains "%3Cscript" or
     nginx.query_string contains "%3cscript" or nginx.query_string contains "%3Cscript%3E" or
     nginx.query_string contains "%3cscript%3e" or nginx.query_string contains "javascript:" or
     nginx.query_string contains "onerror=" or nginx.query_string contains "onload=" or
     nginx.query_string contains "document.cookie")

# =========================
# Rules
# =========================

# SQLi: Require both "words + symbols/encoding" to reduce false positives
- rule: NGINX SQLi Attempt
  desc: Likely SQL injection attempt detected in URL or query string
  enabled: true
  priority: CRITICAL
  source: nginx
  condition: >
    (not nginx_is_static) and
    (nginx_is_readonly or nginx_has_body_method) and
    nginx_has_sqli_words and nginx_has_sqli_rawchars
  output: >
    [NGINX SQLi] ip=%nginx.remote_addr method=%nginx.method path=%nginx.path
    qs=%nginx.query_string ua=%nginx.user_agent status=%nginx.status
  tags: [web, attack, sqli]

# Command injection: Dangerous words + admin/login/api/non-static
- rule: NGINX Command Injection Attempt
  desc: Possible command injection payload observed
  enabled: true
  priority: CRITICAL
  source: nginx
  condition: >
    (not nginx_is_static) and
    (nginx_is_admin_path or nginx_is_login_path or nginx_is_api_path or nginx_has_body_method) and
    nginx_has_cmdinj_words
  output: >
    [NGINX CMDi] ip=%nginx.remote_addr method=%nginx.method path=%nginx.path
    raw=%nginx.raw ua=%nginx.user_agent status=%nginx.status
  tags: [web, attack, command_injection]

# XSS: Match comprehensive XSS patterns (excluding static delivery)
- rule: NGINX XSS Attempt
  desc: XSS-related tokens found in request path or query string
  enabled: true
  priority: WARNING
  source: nginx
  condition: >
    (not nginx_is_static) and
    (nginx.query_string contains "<script" or
     nginx.query_string contains "%3Cscript" or
     nginx.query_string contains "%3cscript" or
     nginx.query_string contains "javascript:" or
     nginx.query_string contains "onerror=" or
     nginx.query_string contains "onerror%3D" or
     nginx.query_string icontains "onerror" or
     nginx.query_string contains "onload=" or
     nginx.query_string contains "onload%3D" or
     nginx.query_string icontains "onload" or
     nginx.query_string contains "<img" or
     nginx.query_string contains "%3Cimg" or
     nginx.query_string contains "%3cimg" or
     nginx.query_string contains "<svg" or
     nginx.query_string contains "%3Csvg" or
     nginx.query_string contains "%3csvg" or
     nginx.query_string contains "onclick=" or
     nginx.query_string contains "onclick%3D" or
     nginx.query_string contains "data:text/html" or
     nginx.query_string contains "data%3Atext%2Fhtml" or
     nginx.query_string contains "eval(" or
     nginx.query_string contains "eval%28" or
     nginx.query_string contains "fromCharCode" or
     nginx.path contains "<script" or
     nginx.path contains "%3Cscript" or
     nginx.path contains "javascript:" or
     nginx.path contains "onerror=" or
     nginx.path contains "onload=" or
     nginx.path contains "<img" or
     nginx.path contains "<svg" or
     nginx.path contains "onclick=" or
     nginx.path contains "data:text/html" or
     nginx.path contains "eval(")
  output: >
    [NGINX XSS] ip=%nginx.remote_addr method=%nginx.method path=%nginx.path
    qs=%nginx.query_string ua=%nginx.user_agent status=%nginx.status
  tags: [web, attack, xss]

# Path traversal
- rule: NGINX Path Traversal Attempt
  desc: Directory traversal tokens in request
  enabled: true
  priority: CRITICAL
  source: nginx
  condition: >
    (not nginx_is_static) and nginx_has_traversal
  output: >
    [NGINX Traversal] ip=%nginx.remote_addr method=%nginx.method path=%nginx.path
    qs=%nginx.query_string ua=%nginx.user_agent status=%nginx.status
  tags: [web, attack, traversal]

# Typical brute force early signs (401/403 on sensitive paths)
- rule: NGINX Auth Failure on Login/Admin Path
  desc: Authentication failures on login/admin endpoints
  enabled: true
  priority: NOTICE
  source: nginx
  condition: >
    (nginx.status in (401, 403)) and
    (nginx_is_login_path or nginx_is_admin_path)
  output: >
    [NGINX AuthFail] ip=%nginx.remote_addr method=%nginx.method path=%nginx.path
    status=%nginx.status ua=%nginx.user_agent
  tags: [web, auth, brute_force, signal]

# Scanner / Tool user agents
- rule: NGINX Suspicious User-Agent
  desc: Known scanning or tool-like user-agents
  enabled: true
  priority: INFORMATIONAL
  source: nginx
  condition: >
    (nginx.user_agent contains "sqlmap" or nginx.user_agent contains "nikto" or
     nginx.user_agent contains "nmap" or nginx.user_agent contains "curl" or
     nginx.user_agent contains "wget" or nginx.user_agent contains "libwww" or
     nginx.user_agent contains "python-requests")
  output: >
    [NGINX UA] ip=%nginx.remote_addr ua=%nginx.user_agent path=%nginx.path
    status=%nginx.status
  tags: [recon, user_agent]

# (Optional) Debug rules are toggle-controlled
- rule: NGINX Debug - Semicolon or PHP Path
  desc: Very noisy; enable only for troubleshooting
  enabled: false
  priority: INFORMATIONAL
  source: nginx
  condition: nginx_debug_enabled and
             (nginx.raw contains ";" or nginx.path contains ".php")
  output: >
    [NGINX Debug] ip=%nginx.remote_addr method=%nginx.method path=%nginx.path raw=%nginx.raw
  tags: [debug]

# HTTP Error monitoring
- rule: NGINX HTTP Server Error
  desc: Detects HTTP 5xx server errors
  enabled: true
  priority: NOTICE
  source: nginx
  condition: >
    nginx.status >= 500
  output: >
    [NGINX 5xx] ip=%nginx.remote_addr method=%nginx.method path=%nginx.path
    status=%nginx.status ua=%nginx.user_agent
  tags: [error, server, web]

# Large response detection
- rule: NGINX Large Response Body
  desc: Detects unusually large response bodies (>10MB)
  enabled: true
  priority: INFORMATIONAL
  source: nginx
  condition: >
    nginx.bytes_sent > 10485760
  output: >
    [NGINX Large] ip=%nginx.remote_addr method=%nginx.method path=%nginx.path
    bytes=%nginx.bytes_sent ua=%nginx.user_agent
  tags: [anomaly, web]

# Sensitive file access attempt
- rule: NGINX Sensitive File Access Attempt
  desc: Detects attempts to access sensitive files
  enabled: true
  priority: WARNING
  source: nginx
  condition: >
    nginx.path contains ".git" or
    nginx.path contains ".env" or
    nginx.path contains "wp-config" or
    nginx.path contains ".htaccess" or
    nginx.path contains ".htpasswd" or
    nginx.path contains ".ssh" or
    nginx.path contains "id_rsa"
  output: >
    [NGINX Sensitive] ip=%nginx.remote_addr method=%nginx.method path=%nginx.path
    status=%nginx.status ua=%nginx.user_agent
  tags: [attack, information_disclosure, web]
name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.1)'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        
    - name: Build plugin binary
      run: |
        echo "Building Falco nginx plugin ${VERSION}"
        cd plugin
        CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -buildmode=c-shared \
          -o ../libfalco-nginx-plugin-linux-amd64.so .
        cd ..
        
        # Verify the binary
        file libfalco-nginx-plugin-linux-amd64.so
        if ! file libfalco-nginx-plugin-linux-amd64.so | grep -q "ELF 64-bit LSB shared object"; then
          echo "Error: Binary is not a valid Linux shared object!"
          exit 1
        fi
        
        # Create checksum
        sha256sum libfalco-nginx-plugin-linux-amd64.so > libfalco-nginx-plugin-linux-amd64.so.sha256
      env:
        VERSION: ${{ github.event.inputs.version }}
        
    - name: Validate rules
      run: |
        # Basic YAML validation
        if [ -f rules/nginx_rules.yaml ]; then
          echo "Validating nginx_rules.yaml"
          # Simple YAML syntax check
          python3 -c "import yaml; yaml.safe_load(open('rules/nginx_rules.yaml'))" || {
            echo "YAML validation failed"
            exit 1
          }
        fi
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version }}
        name: Release ${{ github.event.inputs.version }}
        draft: false
        prerelease: false
        files: |
          libfalco-nginx-plugin-linux-amd64.so
          libfalco-nginx-plugin-linux-amd64.so.sha256
          rules/nginx_rules.yaml
        body: |
          ## Release ${{ github.event.inputs.version }}
          
          ### Assets
          - `libfalco-nginx-plugin-linux-amd64.so`: Plugin binary for Linux x86_64
          - `nginx_rules.yaml`: Falco rules for nginx security monitoring
          
          ### Installation
          ```bash
          curl -sSL https://raw.githubusercontent.com/takaosgb3/falco-plugin-nginx/main/install.sh | sudo bash
          ```
          
          Built by GitHub Actions workflow on Linux self-hosted runner.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}